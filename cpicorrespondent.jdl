entity CorrespondentType {
	correspondentTypeName String required,
    sortNum Integer required,
}


entity Club {
	clubName String required,
	url String,
	email String,
    phone String,
    fax String,
    mobilePhone String,
    address String,
    zip String,
    remark TextBlob,
}

entity ClubPerson {
	clubPersonName String required,
	url String,
	email String,
    phone String,
    fax String,
    mobilePhone String,
    address String,
    zip String,
    remark TextBlob,
}

entity CPICorrespondent {
	correspondentCode String required,
    year String required,
    vesselName String required,
	clientRef String,
	keyWord String,
	registerDate Instant,
	caseDate Instant,
	handlerUser Long,
    remark TextBlob,
}

entity CorrespondentFeeType {
	correspondentFeeTypeName String required,
    sortNum Integer required,
}

entity CorrespondentFee {
	clientNo String ,
    numberId Integer,
	currency Long,
	currencyRate Float,
    cost BigDecimal,
	costDate Instant,
	costDollar BigDecimal,
    remark TextBlob,
}

entity CorrespondentBill {
    numberId Integer,
	year String ,
	correspondentBillCode String ,
	correspondentBillDate Instant ,
	receiver String,
	dueDate Instant ,
	amount BigDecimal,
	currency Long,
	currencyRate Float,
	exchangeDate Instant,
	exchangeCurrency Long,
	exchangeRate Float,
	exchangeAmount BigDecimal,
    remark TextBlob,
}

entity BillFinanceType {
	billFinanceTypeName String required,
    sortNum Integer required,
}

entity CorrespondentFeeAndBill {
}




relationship ManyToOne {
	CorrespondentBill{cpiCorrespondent(correspondentCode)} to CPICorrespondent
}

relationship ManyToOne {
	CorrespondentBill{billFinanceType(billFinanceTypeName)} to BillFinanceType
}

relationship ManyToOne {
	CorrespondentFee{correspondentFeeType(CorrespondentFeeTypeName)} to CorrespondentFeeType
}

relationship ManyToOne {
	CorrespondentFee{cpiCorrespondent(correspondentCode)} to CPICorrespondent
}

relationship ManyToOne {
	CPICorrespondent{correspondentType(correspondentTypeName)} to CorrespondentType
}

relationship ManyToOne {
	CPICorrespondent{club(clubName)} to Club
}

relationship ManyToOne {
	CPICorrespondent{clubPerson(clubPersonName)} to ClubPerson
}

relationship ManyToOne {
	ClubPerson{club(clubName)} to Club
}



relationship ManyToOne {
	CorrespondentFeeAndBill{correspondentDebitBill(correspondentBillCode)} to CorrespondentBill
}

relationship ManyToOne {
	CorrespondentFeeAndBill{correspondentFee(clientNo)} to CorrespondentFee
}

relationship ManyToOne {
	CorrespondentFeeAndBill{correspondentCreditBill(correspondentBillCode)} to CorrespondentBill
}


// Set pagination options
//paginate PartnerType with infinite-scroll
paginate * with pagination

dto * with mapstruct

//Set service options to all except few
service * with serviceImpl //except PartnerType

filter * //except PartnerType


microservice * with cpicorrespondent
